syntax = "proto3";
package bonded_roles;
option java_package = "bisq.bonded_roles.protobuf";
option java_multiple_files = true;
import "common.proto";
import "network_common.proto";
import "network_identity.proto";

enum BondedRoleType {
  BONDEDROLETYPE_UNSPECIFIED = 0;
  BONDEDROLETYPE_MEDIATOR = 1;
  BONDEDROLETYPE_ARBITRATOR = 2;
  BONDEDROLETYPE_MODERATOR = 3;
  BONDEDROLETYPE_SECURITY_MANAGER = 4;
  BONDEDROLETYPE_RELEASE_MANAGER = 5;
  BONDEDROLETYPE_SEED_NODE = 10;
  BONDEDROLETYPE_ORACLE_NODE = 11;
  BONDEDROLETYPE_EXPLORER_NODE = 12;
  BONDEDROLETYPE_MARKET_PRICE_NODE = 13;
}
message AuthorizedOracleNode {
  network.identity.NetworkId networkId = 1;
  string profileId = 2;
  string authorizedPublicKey = 3;
  string bondUserName = 4;
  string signatureBase64 = 5;
  bool staticPublicKeysProvided = 6;
}

message BondedRoleRegistrationRequest {
  string profileId = 1;
  string authorizedPublicKey = 2;
  BondedRoleType bondedRoleType = 3;
  string bondUserName = 4;
  string signatureBase64 = 5;
  optional network.common.AddressByTransportTypeMap addressByTransportTypeMap = 6;
  network.identity.NetworkId networkId = 7;
  bool isCancellationRequest = 8;
}

message AuthorizedBondedRole {
  string profileId = 1;
  string authorizedPublicKey = 2;
  BondedRoleType bondedRoleType = 3;
  string bondUserName = 4;
  string signatureBase64 = 5;
  optional network.common.AddressByTransportTypeMap addressByTransportTypeMap = 6;
  network.identity.NetworkId networkId = 7;
  optional AuthorizedOracleNode authorizingOracleNode = 8;
  bool staticPublicKeysProvided = 9;
}

enum AlertType {
  ALERTTYPE_UNSPECIFIED = 0;
  ALERTTYPE_INFO = 1;
  ALERTTYPE_WARN = 2;
  ALERTTYPE_EMERGENCY = 3;
  ALERTTYPE_BAN = 4;
}

message AuthorizedAlertData {
  string id = 1;
  sint64 date = 2;
  AlertType alertType = 3;
  optional string message = 4;
  bool haltTrading = 5;
  bool requireVersionForTrading = 6;
  optional string minVersion = 7;
  optional AuthorizedBondedRole bannedRole = 8;
  string securityManagerProfileId = 9;
  bool staticPublicKeysProvided = 10;
  optional string headline = 11;
}

message ReleaseNotification {
  string id = 1;
  sint64 date = 2;
  bool isPreRelease = 3;
  bool isLauncherUpdate = 4;
  string releaseNotes = 5;
  string versionString = 6;
  string releaseManagerProfileId = 7;
  bool staticPublicKeysProvided = 8;
}

message AuthorizedDifficultyAdjustmentData {
  sint64 date = 1;
  double difficultyAdjustmentFactor = 2;
  string securityManagerProfileId = 3;
  bool staticPublicKeysProvided = 4;
}

message AuthorizedMinRequiredReputationScoreData {
  sint64 date = 1;
  sint64 minRequiredReputationScore = 2;
  string securityManagerProfileId = 3;
  bool staticPublicKeysProvided = 4;
}

enum MarketPriceProvider {
  MARKETPRICEPROVIDER_UNSPECIFIED = 0;
  MARKETPRICEPROVIDER_BISQAGGREGATE = 1;
  MARKETPRICEPROVIDER_COINGECKO = 2;
  MARKETPRICEPROVIDER_POLO = 3;
  MARKETPRICEPROVIDER_BITFINEX = 4;
  MARKETPRICEPROVIDER_OTHER = 5;
}

message MarketPrice {
  common.PriceQuote priceQuote = 1;
  sint64 timestamp = 2;
  MarketPriceProvider marketPriceProvider = 3;
}

message AuthorizedMarketPriceData {
  map<string, MarketPrice> marketPriceByCurrencyMap = 1;
  bool staticPublicKeysProvided = 2;
}

message MarketPriceStore {
  map<string, MarketPrice> marketPriceByCurrencyMap = 1;
  common.Market selectedMarket = 2;
}
