syntax = "proto3";
package network;
option java_package = "bisq.network.protobuf";
option java_multiple_files = true;
import "common.proto";
import "network_identity.proto";
import "security.proto";
import "google/protobuf/any.proto";

////////////////////////////////////////////////////////////////////
// Data
////////////////////////////////////////////////////////////////////

message NetworkLoad {
  double load = 1;
  double difficultyAdjustmentFactor = 2;
}

enum Feature {
  FEATURE_UNSPECIFIED = 0;
  FEATURE_INVENTORY_HASH_SET = 1;
  FEATURE_INVENTORY_MINI_SKETCH = 2;
  FEATURE_AUTHORIZATION_HASH_CASH = 3;
  FEATURE_AUTHORIZATION_EQUI_HASH = 4;
  FEATURE_AUTHORIZATION_HASH_CASH_V2 = 5;
}

message Capability {
  common.Address address = 1;
  repeated string supportedTransportTypes = 2;
  repeated Feature features = 3;
  sint32 version = 4;
  string applicationVersion = 5;
}

enum InventoryFilterType{
  INVENTORYFILTERTYPE_UNSPECIFIED = 0;
  INVENTORYFILTERTYPE_HASH_SET = 1;
  INVENTORYFILTERTYPE_MINI_SKETCH = 2;
}

message HashSetFilterEntry {
  bytes hash = 1;
  sint32 sequenceNumber = 2;
}

message HashSetFilter {
  repeated HashSetFilterEntry filterEntries = 1;
}

message MiniSketchFilter {
}

message InventoryFilter {
  InventoryFilterType inventoryFilterType = 1;
  oneof message {
    HashSetFilter hashSetFilter = 10;
    MiniSketchFilter miniSketchFilter = 11;
  }
}

message Inventory {
  repeated DataRequest entries = 1;
  bool maxSizeReached = 2;
}

message Peer {
  Capability capability = 1;
  NetworkLoad networkLoad = 2;
  bool isOutboundConnection = 3;
  sint64 created = 4;
}

enum AuthorizationTokenType{
  AUTHORIZATIONTOKENTYPE_UNSPECIFIED = 0;
  AUTHORIZATIONTOKENTYPE_HASH_CASH = 1;
  AUTHORIZATIONTOKENTYPE_EQUI_HASH = 2;
  AUTHORIZATIONTOKENTYPE_HASH_CASH_V2 = 3;
}

message HashCashToken {
  security.ProofOfWork proofOfWork = 1;
  sint32 messageCounter = 2;
}

message HashCashV2Token {
  security.ProofOfWork proofOfWork = 1;
  sint32 messageCounter = 2;
}

message EquiHashToken {
  security.ProofOfWork proofOfWork = 1;
  sint32 messageCounter = 2;
}
message AuthorizationToken {
  AuthorizationTokenType authorizationTokenType = 1;

  oneof message {
    HashCashToken hashCashToken = 10;
    EquiHashToken equiHashToken = 11;
    HashCashV2Token hashCashV2Token = 12;
  };
}


////////////////////////////////////////////////////////////////////
// NetworkMessages
////////////////////////////////////////////////////////////////////

message ConnectionHandshake {
  message Request {
    Capability capability = 1;
    optional bytes addressOwnershipProof = 2;
    NetworkLoad networkLoad = 3;
    sint64 signatureDate = 4;
  }
  message Response {
    Capability capability = 1;
    NetworkLoad networkLoad = 2;
  }
}

message CloseConnectionMessage {
  string closeReason = 1;
}

message PeerExchangeRequest {
  sint32 nonce = 1;
  repeated Peer peers = 2;
}
message PeerExchangeResponse {
  sint32 nonce = 1;
  repeated Peer peers = 2;
}

message Ping {
  sint32 nonce = 1;
}
message Pong {
  sint32 requestNonce = 1;
}

message NetworkLoadExchangeRequest {
  sint32 nonce = 1;
  NetworkLoad networkLoad = 2;
}

message NetworkLoadExchangeResponse {
  sint32 requestNonce = 1;
  NetworkLoad networkLoad = 2;
}

message ConfidentialMessage {
  security.ConfidentialData confidentialData = 1;
  string receiverKeyId = 2;
}

message AckMessage {
  string id = 1;
}

message InventoryRequest {
  InventoryFilter inventoryFilter = 1;
  sint32 nonce = 2;
  sint32 version = 3;
}

message InventoryResponse {
  Inventory inventory = 1;
  sint32 requestNonce = 2;
  sint32 version = 3;
}

message ExternalNetworkMessage {
  google.protobuf.Any payload = 1;
}


////////////////////////////////////////////////////////////////////
// EnvelopePayloadMessage types
////////////////////////////////////////////////////////////////////

message EnvelopePayloadMessage {
  oneof message {
    ConnectionHandshake.Request connectionHandshakeRequest = 1;
    ConnectionHandshake.Response connectionHandshakeResponse = 2;

    CloseConnectionMessage closeConnectionMessage = 3;

    PeerExchangeRequest peerExchangeRequest = 4;
    PeerExchangeResponse peerExchangeResponse = 5;

    Ping ping = 6;
    Pong pong = 7;

    ConfidentialMessage confidentialMessage = 8;
    AckMessage ackMessage = 9;

    InventoryRequest inventoryRequest = 10;
    InventoryResponse inventoryResponse = 11;

    DataRequest dataRequest = 12;

    NetworkLoadExchangeRequest networkLoadExchangeRequest = 13;
    NetworkLoadExchangeResponse networkLoadExchangeResponse = 14;

    // Wrapper for NetworkMessages defined in other modules like PrivateChatMessage which are wrapped in an Any blob
    ExternalNetworkMessage externalNetworkMessage = 15;

    ReportRequest reportRequest = 16;
    ReportResponse reportResponse = 17;
  }
}


////////////////////////////////////////////////////////////////////
// DataRequests
////////////////////////////////////////////////////////////////////

message MetaData {
  sint64 ttl = 1;
  sint32 priority = 2;
  sint32 maxMapSize = 3;
  string className = 4;
}
message AuthorizedData {
  optional bytes signature = 1;
  bytes authorizedPublicKeyBytes = 2;
}
message DefaultAuthenticatedData {
}
message AuthenticatedData {
  google.protobuf.Any distributedData = 1;
  oneof message {
    DefaultAuthenticatedData defaultAuthenticatedData = 10;
    AuthorizedData authorizedData = 11;
  }
}
message AuthenticatedSequentialData {
  AuthenticatedData authenticatedData = 1;
  sint32 sequenceNumber = 2;
  bytes pubKeyHash = 3;
  sint64 created = 4;
}
message AddAuthenticatedDataRequest {
  AuthenticatedSequentialData authenticatedSequentialData = 1;
  bytes signature = 2;
  bytes ownerPublicKeyBytes = 3;
}
message RemoveAuthenticatedDataRequest {
  MetaData metaData = 1;
  bytes hash = 2;
  bytes ownerPublicKeyBytes = 3;
  sint32 sequenceNumber = 4;
  bytes signature = 5;
  sint64 created = 6;
  sint32 version = 7;
}
message RefreshAuthenticatedDataRequest {
  MetaData metaData = 1;
  bytes hash = 2;
  bytes ownerPublicKeyBytes = 3;
  sint32 sequenceNumber = 4;
  bytes signature = 5;
  sint32 version = 6;
  sint64 created = 7;
}

message MailboxData {
  ConfidentialMessage confidentialMessage = 1;
  MetaData metaData = 2;
  sint32 version = 3;
}
message MailboxSequentialData {
  MailboxData mailboxData = 1;
  sint32 sequenceNumber = 2;
  bytes senderPublicKeyHash = 3;
  sint64 created = 4;
  bytes receiversPubKeyBytes = 5;
  bytes receiversPubKeyHash = 6;
}
message AddMailboxRequest {
  MailboxSequentialData mailboxSequentialData = 1;
  bytes signature = 2;
  bytes senderPublicKeyBytes = 3;
}
message RemoveMailboxRequest {
  MetaData metaData = 1;
  bytes hash = 2;
  bytes receiverPublicKeyBytes = 3;
  bytes signature = 4;
  sint64 created = 5;
  sint32 version = 6;
}

message AddAppendOnlyDataRequest {
  google.protobuf.Any appendOnlyData = 1;
}

////////////////////////////////////////////////////////////////////
// DataRequest types
////////////////////////////////////////////////////////////////////

message DataRequest {
  oneof message {
    AddAuthenticatedDataRequest addAuthenticatedDataRequest = 1;
    RemoveAuthenticatedDataRequest removeAuthenticatedDataRequest = 2;
    RefreshAuthenticatedDataRequest refreshAuthenticatedDataRequest = 3;

    AddMailboxRequest  addMailboxRequest = 4;
    RemoveMailboxRequest removeMailboxRequest = 5;

    AddAppendOnlyDataRequest addAppendOnlyDataRequest = 6;
  }
}


////////////////////////////////////////////////////////////////////
// NetworkEnvelope
////////////////////////////////////////////////////////////////////

message NetworkEnvelope {
  sint32 version = 1;
  AuthorizationToken authorizationToken = 2;
  EnvelopePayloadMessage networkMessage = 3;
}

enum MessageDeliveryStatus {
  MESSAGEDELIVERYSTATUS_UNSPECIFIED = 0;
  MESSAGEDELIVERYSTATUS_CONNECTING = 1;
  MESSAGEDELIVERYSTATUS_SENT = 2;
  MESSAGEDELIVERYSTATUS_ACK_RECEIVED = 3;
  MESSAGEDELIVERYSTATUS_TRY_ADD_TO_MAILBOX = 4;
  MESSAGEDELIVERYSTATUS_ADDED_TO_MAILBOX = 5;
  MESSAGEDELIVERYSTATUS_MAILBOX_MSG_RECEIVED = 6;
  MESSAGEDELIVERYSTATUS_FAILED = 7;
}


////////////////////////////////////////////////////////////////////
// Stores
////////////////////////////////////////////////////////////////////

message DataStore {
  message MapEntry {
    .common.ByteArray key = 1; // The leading dot is needed to distinguish between common module and network.common
    DataRequest value = 2;
  }
  repeated MapEntry mapEntries = 1;
}

message NetworkServiceStore {
  repeated common.AddressByTransportTypeMap seedNodes = 1;
  map<string, network.identity.NetworkId> networkIdByTag = 2 [deprecated = true]; // Moved to NetworkIdStore
}

message NetworkIdStore {
  map<string, network.identity.NetworkId> networkIdByTag = 1;
}

message MessageDeliveryStatusStore {
  map<string, MessageDeliveryStatus> messageDeliveryStatusByMessageId = 1;
  map<string, sint64> creationDateByMessageId = 2;
}

message ResendMessageData {
  EnvelopePayloadMessage envelopePayloadMessage = 1;
  network.identity.NetworkId receiverNetworkId = 2;
  security.KeyPair senderKeyPair = 3;
  network.identity.NetworkId senderNetworkId = 4;
  MessageDeliveryStatus messageDeliveryStatus = 5;
  sint64 date = 6;
}

message ResendMessageStore {
  map<string, ResendMessageData> resendMessageDataByMessageId = 1;
  map<string, sint32> numResendsByMessageId = 2;
}

message PeerGroupStore {
  repeated Peer persistedPeers = 1;
}


////////////////////////////////////////////////////////////////////
// Report
////////////////////////////////////////////////////////////////////

message Report {
  map<string, sint32> authorizedDataPerClassName = 1;
  map<string, sint32> authenticatedDataPerClassName = 2;
  map<string, sint32> mailboxDataPerClassName = 3;
  sint32 numConnections = 4;
  sint32 memoryUsed = 5;
  sint32 numThreads = 6;
  double nodeLoad = 7;
}
message ReportRequest {
  string requestId = 1;
}
message ReportResponse {
  string requestId = 1;
  Report report = 2;
}
    