application {
    appName = "Bisq2"
    devMode = false
    devModeReputationScore = 0
    keyIds = "E222AA02,387C8307"
    ignoreSigningKeyInResourcesCheck = false
    ignoreSignatureVerification = false
    memoryReportIntervalSec = 600
    includeThreadListInMemoryReport = true
    checkInstanceLock = true

    restApi = {
        enabled = false
        server = {
            protocol = "http://"
            host = "localhost"
            port = 8082
        }
        localhostOnly = true    // Accessible only via localhost
        // List of supported API paths. If empty whiteListEndPoints will be ignored.
        whiteListEndPoints = []
        // List of ignored API paths. Wildcard means any path containing the string before the wild card is ignored.
        // E.g. ["/report/address-list", "/user-identity*"]
        blackListEndPoints = []
        supportedAuth = []   // supported auth schemes. If empty no authentication is required
    }

    websocket = {
        enabled = false
        includeRestApi = true
        server = {
            protocol = "http://"
            host = "localhost"
            port = 8090
        }
        localhostOnly = true    // Accessible only via localhost
        whiteListEndPoints = []
        blackListEndPoints = []
        supportedAuth = []   // supported auth schemes. If empty no authentication is required
    }

    security = {
        keyBundle = {
            defaultTorPrivateKey = ""
            defaultI2pPrivateKey = ""
            writeDefaultTorPrivateKeyToFile = false
            writeDefaultI2pPrivateKeyToFile = false
        }
    }


    bondedRoles = { 
        ignoreSecurityManager = false

        marketPrice = {
            interval = 180 // in seconds
            timeoutInSeconds = 60
            providers = [
                        {
                            // Production node, bonded role
                            url = "http://runbtcpn7gmbj5rgqeyfyvepqokrijem6rbw7o5wgqbguimuoxrmcdyd.onion"
                            operator = "runbtc",
                        },
                            // I2P
                        {
                            url = "http://l46rv7etfz2yiohbgnip5tdv2jghwfgysbf4hgldyvffvkyuhlwa.b32.i2p"
                            operator = "i2ppricenode",
                        },
                    ]
            fallbackProviders = [
                        {
                           url = "http://172.86.75.7:8080"
                           operator = "wiz",
                        },
                        {
                            url = "http://emzypricpidesmyqg2hc6dkwitqzaxrqnpkdg3ae2wef5znncu2ambqd.onion"
                            operator = "emzy",
                        },
                        {
                            url = "http://devinpndvdwll4wiqcyq5e7itezmarg7rzicrvf6brzkwxdm374kmmyd.onion"
                            operator = "devinbileck",
                        },
                        {
                            url = "http://ro7nv73awqs3ga2qtqeqawrjpbxwarsazznszvr6whv7tes5ehffopid.onion"
                            operator = "alexej996",
                        },
                    ]
        }

        blockchainExplorer = {
            timeoutInSeconds = 60
            providers = [
                        {
                             // Production node, bonded role
                            url = "http://runbtcx3wfygbq2wdde6qzjnpyrqn3gvbks7t5jdymmunxttdvvttpyd.onion"
                            operator = "RunBTC",
                        }
                    ]
            fallbackProviders = [
                        {
                            url = "https://mempool.emzy.de"
                            operator = "emzy",
                        },
                        {
                            url = "http://mempool4t6mypeemozyterviq3i5de4kpoua65r3qkn5i3kknu5l2cad.onion"
                            operator = "emzy",
                        },
                        {
                            url = "https://mempool.bisq.services"
                            operator = "devinbileck",
                        },
                        {
                            url = "http://mempoolcutehjtynu4k4rd746acmssvj2vz4jbz4setb72clbpx2dfqd.onion"
                            operator = "devinbileck",
                        },
                        {
                            url = "https://blockstream.info"
                            operator = "blockstream",
                        },
                        {
                            url = "http://explorerzydxu5ecjrkwceayqybizmpjjznk5izmitf2modhcusuqlid.onion"
                            operator = "blockstream",
                        },
                    ]
        }
    }
    
    support = {
        securityManager ={
            staticPublicKeysProvided = false        
        }
        releaseManager ={
            staticPublicKeysProvided = false        
        }
        moderator ={
            staticPublicKeysProvided = false        
        }
    }
    
    network {
        version = 1

        supportedTransportTypes = ["I2P", "TOR"]
        features = ["INVENTORY_HASH_SET","AUTHORIZATION_HASH_CASH","AUTHORIZATION_HASH_CASH_V2"]

        serviceNode {
            p2pServiceNode=["PEER_GROUP","DATA","CONFIDENTIAL","ACK","MONITOR"]
        }

        inventory {
            maxSizeInKb = 2000
            repeatRequestIntervalInSeconds = 600
            maxSeedsForRequest = 2
            maxPeersForRequest = 4
            maxPendingRequestsAtStartup = 5
            maxPendingRequestsAtPeriodicRequests = 2
            myPreferredFilterTypes=["HASH_SET"]
        }

        authorization {
            myPreferredAuthorizationTokenTypes=["HASH_CASH_V2"]
        }

        clearNetPeerGroup {
            bootstrapTimeInSeconds = 5
            houseKeepingIntervalInSeconds = 60
            timeoutInSeconds = 120
            maxAgeInHours = 2
            maxPersisted = 100
            maxReported = 500
            maxSeeds = 4
        }

        defaultPeerGroup {
            bootstrapTimeInSeconds = 20
            houseKeepingIntervalInSeconds = 60
            timeoutInSeconds = 120
            maxAgeInHours = 2
            maxPersisted = 100
            maxReported = 500
            maxSeeds = 4
        }

        peerGroup {
            minNumConnectedPeers=8
            minNumOutboundConnectedPeers=3
            maxNumConnectedPeers=12
            minNumReportedPeers=1
        }

        peerExchangeStrategy {
            numSeedNodesAtBoostrap=3
            numPersistedPeersAtBoostrap=10
            numReportedPeersAtBoostrap=10
            supportPeerReporting = true
        }

        keepAlive {
            maxIdleTimeInSeconds=90
            intervalInSeconds=60
            timeoutInSeconds = 120
        }

        // For now there are no public seed nodes set up. Devs have to run their local ones.    
        seedAddressByTransportType {
            "clear" : [
                "127.0.0.1:8000",
                "127.0.0.1:8001"
            ]
            "tor" : [
                "hj2kj43oyq4mhd5gx4vokalnci3vlbwzclv7usocfwuj5f5iks3eivqd.onion:1000",
                "plur5t7zhcf45bltdhtb4o43p726dqhibc6xo2lhjfxctjcoinlclaid.onion:1000",
                "ljtn3q7fkb7nqo6umkz36qip5fb46y43hajlkjl5zncctzii5wcsthyd.onion:1000"
            ]
            "i2p" : [
            "o1dR2GQY3ICpUr4OsYsXMLLo7VktmUlmEF2RE0hemKGjV1HYZBjcgKlSvg6xixcwsujtWS2ZSWYQXZETSF6YoaNXUdhkGNyAqVK-DrGLFzCy6O1ZLZlJZhBdkRNIXpiho1dR2GQY3ICpUr4OsYsXMLLo7VktmUlmEF2RE0hemKGjV1HYZBjcgKlSvg6xixcwsujtWS2ZSWYQXZETSF6YoaNXUdhkGNyAqVK-DrGLFzCy6O1ZLZlJZhBdkRNIXpiho1dR2GQY3ICpUr4OsYsXMLLo7VktmUlmEF2RE0hemKGjV1HYZBjcgKlSvg6xixcwsujtWS2ZSWYQXZETSF6YoQFLrd2GFPr6-Fh4y6Wtrm0TixNJDtj3~LLUSu~o7Mt96X~a1dMV~AnFNgwoKEWida8emltejjBvmWsKJ2UhtsBm~QAR7wBdGsoLat~Rec8MFTjA-nBineQcgGDZ42zPLDoWTuna13dOtTd-U45xn22TwFpSPm~nvy6rfjmpElcABQAIAAMAAGsMIE4=:2000",
            "aWv7~eT-4W3se5VU3mTJmXNATio9mAAiFu-wP1Sa~Nxpa~v95P7hbex7lVTeZMmZc0BOKj2YACIW77A~VJr83Glr-~3k~uFt7HuVVN5kyZlzQE4qPZgAIhbvsD9UmvzcaWv7~eT-4W3se5VU3mTJmXNATio9mAAiFu-wP1Sa~Nxpa~v95P7hbex7lVTeZMmZc0BOKj2YACIW77A~VJr83Glr-~3k~uFt7HuVVN5kyZlzQE4qPZgAIhbvsD9UmvzcaWv7~eT-4W3se5VU3mTJmXNATio9mAAiFu-wP1Sa~Nxpa~v95P7hbex7lVTeZMmZc0BOKj2YACIW77A~VJr83AC2DPXLGsopAexBiT8v8hRtVTnCckAWb~vy2BrDIPuEDlvyuqNpNijJizqHNGnut24iFKJJWbhRFZSAiFp4HTNxFQBAnwDLNTQoQU1VmLJIwloVpYqhr6yqxAOQS~jMcZtK6JwVPxmlP6JvTaY9Y79AHVP8-e~6xCdqhSj-v-4tBQAIAAMAAPsveag=:2000"
            ]
        }
        
        configByTransportType {
            clear { 
                socketTimeout = 120
                devModeDelayInMs = 10
                sendMessageThrottleTime = 200
                receiveMessageThrottleTime = 200
                connectTimeoutMs = 3000
                clearNetAddressType = "LOCAL_HOST"
            }
            tor {
                bootstrapTimeout = 240
                hsUploadTimeout = 120
                socketTimeout = 120
                testNetwork = false
                directoryAuthorities = []
                torrcOverrides = {}
                sendMessageThrottleTime = 200
                receiveMessageThrottleTime = 200
                useExternalTor = false
            }
            i2p {
                socketTimeout = 120
                i2cpHost = "127.0.0.1"
                i2cpPort = 7654
                inboundKBytesPerSecond = 1024
                outboundKBytesPerSecond = 512
                bandwidthSharePercentage = 50
                embeddedRouter = true
                extendedI2pLogging = false
                sendMessageThrottleTime = 200
                receiveMessageThrottleTime = 200
                proxyList = [
                 { host = "213.210.36.244", port = 4444 }
                 ]
            }
        }
    }

    trade = {
        muSig = {
            grpcServer = {
                host = "127.0.0.1"
                port = 50051
            }
        }
    }
}