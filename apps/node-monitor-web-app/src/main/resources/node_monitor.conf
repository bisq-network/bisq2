application {
    appName = "Bisq2"
    devMode = false
    devModeReputationScore = 0
    devModeWalletSetup = false
    keyIds = "E222AA02,387C8307"
    ignoreSigningKeyInResourcesCheck = false
    ignoreSignatureVerification = false
    memoryReportIntervalSec = 120
    includeThreadListInMemoryReport = true
    checkInstanceLock = true

    logging = {
        rollingPolicyMaxIndex = 20
        maxFileSize = "10MB"
        logLevel = "INFO"
    }

    restApi = {
        enabled = true
        server = {
            protocol = "http://"
            host = "localhost"
            port = 8083
        }
        localhostOnly = true    // Accessible only via localhost
        // List of allowed API paths (regex patterns). If empty whiteListEndPoints will be ignored.
        whiteListEndPoints = []
        // List of ignored API paths. whitelist and blacklist both will be treated as regex entries
        // E.g. ["/api/v1/report/address-list", "/api/v1/user-identity.*"]
        blackListEndPoints = []
        supportedAuth = []   // supported auth schemes. If empty no authentication is required
    }

    websocket = {
        enabled = false
        includeRestApi = false
        server = {
            protocol = "http://"
            host = "localhost"
            port = 8090
        }
        localhostOnly = true    // Accessible only via localhost
        whiteListEndPoints = []
        blackListEndPoints = []
        supportedAuth = []   // supported auth schemes. If empty no authentication is required
    }

    security = {
        keyBundle = {
            keyStoreSecretUid = ""
            defaultPrivateKey = ""
            defaultTorPrivateKey = ""
            defaultI2pIdentityBase64 = ""
            writeKeyStoreSecretUidToFile = false
            writeDefaultPrivateKeyToFile = false
            writeDefaultTorPrivateKeyToFile = false
            writeDefaultI2pIdentityBase64ToFile = false
        }
    }

    bondedRoles = {
        ignoreSecurityManager = false

        marketPrice = {
            enabled = false
            interval = 180 // in seconds
            timeoutInSeconds = 60
            providers = [
                        {
                            // Production node, bonded role
                            url = "http://runbtcpn7gmbj5rgqeyfyvepqokrijem6rbw7o5wgqbguimuoxrmcdyd.onion"
                            operator = "runbtc",
                        },
                        {
                            // Production node, bonded role
                            url = "http://3ncpabphuixvd45yfekeugsz57voiqij7cf3goudmcyfekti7t6a.b32.i2p"
                            operator = "runbtc",
                        }
                    ]
            fallbackProviders = [
                        {
                           url = "http://172.86.75.7:8080"
                           operator = "wiz",
                        },
                        {
                            url = "http://emzypricpidesmyqg2hc6dkwitqzaxrqnpkdg3ae2wef5znncu2ambqd.onion"
                            operator = "emzy",
                        },
                        {
                            url = "http://devinpndvdwll4wiqcyq5e7itezmarg7rzicrvf6brzkwxdm374kmmyd.onion"
                            operator = "devinbileck",
                        },
                        {
                            url = "http://ro7nv73awqs3ga2qtqeqawrjpbxwarsazznszvr6whv7tes5ehffopid.onion"
                            operator = "alexej996",
                        },
                    ]
        }

    blockchainExplorer = {
            timeoutInSeconds = 60
            providers = [
                        {
                             // Production node, bonded role
                            url = "http://runbtcx3wfygbq2wdde6qzjnpyrqn3gvbks7t5jdymmunxttdvvttpyd.onion"
                            operator = "RunBTC",
                        }
                    ]
            fallbackProviders = [
                        {
                            url = "https://mempool.emzy.de"
                            operator = "emzy",
                        },
                        {
                            url = "http://mempool4t6mypeemozyterviq3i5de4kpoua65r3qkn5i3kknu5l2cad.onion"
                            operator = "emzy",
                        },
                        {
                            url = "https://mempool.bisq.services"
                            operator = "devinbileck",
                        },
                        {
                            url = "http://mempoolcutehjtynu4k4rd746acmssvj2vz4jbz4setb72clbpx2dfqd.onion"
                            operator = "devinbileck",
                        },
                        {
                            url = "https://blockstream.info"
                            operator = "blockstream",
                        },
                        {
                            url = "http://explorerzydxu5ecjrkwceayqybizmpjjznk5izmitf2modhcusuqlid.onion"
                            operator = "blockstream",
                        },
                    ]
        }
    }

    support = {
        securityManager ={
            staticPublicKeysProvided = false
        }
        releaseManager ={
            staticPublicKeysProvided = false
        }
        moderator ={
            staticPublicKeysProvided = false
        }
    }

    network {
        version = 1

        supportedTransportTypes = ["TOR"]
        features = ["INVENTORY_HASH_SET","AUTHORIZATION_HASH_CASH","AUTHORIZATION_HASH_CASH_V2"]

        notifyExecutorMaxPoolSize = 10
        connectionExecutorMaxPoolSize = 10

        serviceNode {
            p2pServiceNode=["PEER_GROUP","DATA","CONFIDENTIAL","ACK","MONITOR","REPORT_REQUEST"]
        }

        inventory {
            maxSizeInKb = 2000
            repeatRequestIntervalInSeconds = 600
            maxSeedsForRequest = 2
            maxPeersForRequest = 4
            maxPendingRequests = 5
            maxPendingRequestsAtPeriodicRequests = 2
            minCompletedRequests = 3
            myPreferredFilterTypes=["HASH_SET"]
        }

        authorization {
            myPreferredAuthorizationTokenTypes=["HASH_CASH_V2"]
        }

        clearNetPeerGroup {
            bootstrapTimeInSeconds = 5
            houseKeepingIntervalInSeconds = 60
            timeoutInSeconds = 120
            maxAgeInHours = 2
            maxPersisted = 100
            maxReported = 500
            maxSeeds = 4
        }

        defaultPeerGroup {
            bootstrapTimeInSeconds = 20
            houseKeepingIntervalInSeconds = 60
            timeoutInSeconds = 120
            maxAgeInHours = 2
            maxPersisted = 100
            maxReported = 500
            maxSeeds = 4
        }

        peerGroup {
            minNumConnectedPeers=8
            minNumOutboundConnectedPeers=3
            maxNumConnectedPeers=12
            minNumReportedPeers=1
        }

        peerExchange {
            numSeedNodesAtBoostrap=3
            numPersistedPeersAtBoostrap=10
            numReportedPeersAtBoostrap=10
            supportPeerReporting = true
        }

        keepAlive {
            maxIdleTimeInSeconds=90
            intervalInSeconds=60
            timeoutInSeconds = 120
        }

        // For now there are no public seed nodes set up. Devs have to run their local ones.
        seedAddressByTransportType {
            "clear" : [
                "127.0.0.1:8000",
                "127.0.0.1:8001"
            ]
            "tor" : [
                "hj2kj43oyq4mhd5gx4vokalnci3vlbwzclv7usocfwuj5f5iks3eivqd.onion:1000",
                "plur5t7zhcf45bltdhtb4o43p726dqhibc6xo2lhjfxctjcoinlclaid.onion:1000",
                "ljtn3q7fkb7nqo6umkz36qip5fb46y43hajlkjl5zncctzii5wcsthyd.onion:1000"
            ]
            "i2p" : [
                "ObzWA5uoW7BMI0lkt67kOqzAEIGggzfi1lfR4eDxYaU5vNYDm6hbsEwjSWS3ruQ6rMAQgaCDN-LWV9Hh4PFhpTm81gObqFuwTCNJZLeu5DqswBCBoIM34tZX0eHg8WGlObzWA5uoW7BMI0lkt67kOqzAEIGggzfi1lfR4eDxYaU5vNYDm6hbsEwjSWS3ruQ6rMAQgaCDN-LWV9Hh4PFhpTm81gObqFuwTCNJZLeu5DqswBCBoIM34tZX0eHg8WGlObzWA5uoW7BMI0lkt67kOqzAEIGggzfi1lfR4eDxYaU5vNYDm6hbsEwjSWS3ruQ6rMAQgaCDN-LWV9Hh4PFhpTm81gObqFuwTCNJZLeu5DqswBCBoIM34tZX0eHg8WGlObzWA5uoW7BMI0lkt67kOqzAEIGggzfi1lfR4eDxYaU5vNYDm6hbsEwjSWS3ruQ6rMAQgaCDN-LWV9Hh4PFhpa03btjnuHsU5Gsx61g7CqT2YA8J6EHOiS~-XZpiNt01BQAEAAcAAA==:2000",
                "X4JwQsQEgEbDAXl2iCS-VhErz5dICQZn3YudjHUGiXNfgnBCxASARsMBeXaIJL5WESvPl0gJBmfdi52MdQaJc1-CcELEBIBGwwF5dogkvlYRK8-XSAkGZ92LnYx1BolzX4JwQsQEgEbDAXl2iCS-VhErz5dICQZn3YudjHUGiXNfgnBCxASARsMBeXaIJL5WESvPl0gJBmfdi52MdQaJc1-CcELEBIBGwwF5dogkvlYRK8-XSAkGZ92LnYx1BolzX4JwQsQEgEbDAXl2iCS-VhErz5dICQZn3YudjHUGiXNfgnBCxASARsMBeXaIJL5WESvPl0gJBmfdi52MdQaJc1-CcELEBIBGwwF5dogkvlYRK8-XSAkGZ92LnYx1BolzX4JwQsQEgEbDAXl2iCS-VhErz5dICQZn3YudjHUGiXNfgnBCxASARsMBeXaIJL5WESvPl0gJBmfdi52MdQaJc3-k7yFyk92URLsUHADJeIwbxG4AEdZduQcYQgbdbh4DBQAEAAcAAA==:2000"
            ]
        }

        configByTransportType {
            clear {
                socketTimeout = 120
                sendMessageThrottleTime = 200
                receiveMessageThrottleTime = 200
                connectTimeoutMs = 3000
                clearNetAddressType = "LOCAL_HOST"
            }
            tor {
                socketTimeout = 120
                bootstrapTimeout = 240
                hsUploadTimeout = 120
                testNetwork = false
                directoryAuthorities = []
                torrcOverrides = {}
                sendMessageThrottleTime = 200
                receiveMessageThrottleTime = 200
                useExternalTor = false
            }
            i2p {
                socketTimeout = 120
                sendMessageThrottleTime = 200
                receiveMessageThrottleTime = 200
                connectTimeout = 120
                routerStartupTimeout = 300
                i2cpHost = "127.0.0.1"
                i2cpPort = 7654
                bi2pGrpcHost = "127.0.0.1"
                bi2pGrpcPort = 6159
                httpProxyHost = "127.0.0.1"
                httpProxyPort = 4444
                httpProxyEnabled = false
                embeddedRouter = false
                inboundKBytesPerSecond = 512
                outboundKBytesPerSecond = 512
                bandwidthSharePercentage = 50
            }
        }
    }

    trade = {
        muSig = {
            grpcServer = {
                host = "127.0.0.1"
                port = 50051
            }
        }
    }

    wallet = {
        enabled = false
        host = "127.0.0.1"
        port = 50052
    }
}