####################################################################
# Bisq 2 strings (any new string for Bisq 2 not covered by the Bisq 1 strings)
####################################################################
####################################################################
# network
####################################################################
peers=Peers
clearNet=Clear net
tor=Tor
i2p=I2P
table.connections.title=Connections
table.connections.header.nodeId=Node ID
table.connections.header.established=Established
table.connections.header.connectionDirection=In/Out
table.connections.header.rtt=RTT
table.connections.header.sentHeader=Sent
table.connections.header.receivedHeader=Received
table.connections.value.inbound=Inbound
table.connections.value.outbound=Outbound
table.connections.value.ioData={0} / {1} Messages
nodeInfo.title=Node info
nodeInfo.myAddress=My default address:
table.nodes.title=My nodes
table.nodes.header.address=Server address
table.nodes.header.nodeId=Node ID
table.nodes.header.numConnections=Number of Connections
table.nodes.header.type=Type
table.nodes.header.domainId=Domain ID
table.nodes.type.pool=Pool
table.nodes.type.active=Active
table.nodes.type.retired=Retired
table.nodes.type.gossip=Gossip
####################################################################
# common
####################################################################
# Navigation
offerbook=Offerbook
trade=Trade
trade.offerbook=Offerbook
trade.createOffer=Create offer
trade.takeOffer=Take offer
markets=Markets
social=Social
social.chat=Chat
social.tradeIntent=Trade intent
social.userProfile=User profile
portfolio=Portfolio
portfolio.openOffers=My open offers
portfolio.pending=Open trades
portfolio.closed=History
wallet=Wallet
account=Account
support=Support
settings=Settings
settings.preferences=Preferences
settings.networkInfo=Network Info
settings.about=About
# Generic
na=N/A
date=Date
amount=Amount
market=Market
publish=Publish
contact=Contact
id=ID
fiat=Fiat
crypto=Crypto
enterAmount=Enter Amount
ask=Ask
bid=Bid
remove=Remove
sendMessagePrompt=Send a message...
send=Send
address=Address
edit=Edit
cancel=Cancel
buy=buy
sell=sell
spend=spend
receive=receive
search=Search
direction.label.buy=BUY {0}
direction.label.sell=SELL {0}
# Table
social.publicChannels=Public channels
social.privateChannels=Private channels

social.chat.btcEurMarket=BTC-EUR market
social.chat.btcUsdMarket=BTC-USD market
social.chat.anyMarket=Anything
social.chat.input.prompt=Send a message...
social.createUserProfile.headline=Create new user profile
social.createUserProfile.userName.prompt=User name
social.createUserProfile.generateNewIdentity=Generate new Identity
social.createUserProfile.createButton=Create user profile
social.createUserProfile.prepare=Preparing network node for new identity...
social.createUserProfile.success=New user profile with username ''{0}'' was created.
social.userProfileSelection.headline=Select user profile
social.createUserProfile.entitlement.headline=Add entitled role(s)
social.createUserProfile.entitlement.table.header.typeName=Entitled role
social.createUserProfile.entitlement.table.header.proof=Proof
social.createUserProfile.entitlement.table.proof.button=Provide proof
social.createUserProfile.entitlement.table.header.verification=Verification
social.createUserProfile.entitlement.table.header.info=More info
social.createUserProfile.table.entitlement.verify=Verify
social.createUserProfile.table.entitlement.verify.success=Verified
social.createUserProfile.table.entitlement.verify.failed=Failed
social.createUserProfile.entitlement.popup.headline=Provide proof
social.createUserProfile.entitlement.popup.moderator.message=Copy the invitation code and use that as \
  pre-image for the 'Proof of burn' transaction in Bisq.
social.createUserProfile.entitlement.popup.proofOfBurn.message=Copy the hash of the public key and use that as \
  pre-image for the 'Proof of burn' transaction in Bisq.
social.createUserProfile.entitlement.popup.bondedRole.message=After being accepted by the DAO for the requested bonded \
  role, copy the hash of the public key and use that as message in the bonded role signing tool in Bisq and \
  paste in the signature.
social.createUserProfile.entitlement.popup.pubKeyHash=Hash of public key
social.createUserProfile.entitlement.popup.minBurnAmount=Min. amount to burn
social.createUserProfile.entitlement.popup.proofOfBurn=Proof of burn transaction ID
social.createUserProfile.entitlement.popup.bondedRole.txId=Transaction ID of bonded role request
social.createUserProfile.entitlement.popup.bondedRole.sig=Signature
social.createUserProfile.entitlement.popup.moderator.code=Invitation code
social.createUserProfile.id=Id: {0}
social.createUserProfile.entitledRoles=Role(s): {0}

LIQUIDITY_PROVIDER=Liquidity provider as BTC Seller
CHANNEL_ADMIN=Channel administrator
CHANNEL_MODERATOR=Channel moderator
MEDIATOR=Mediator
social.createUserProfile.liquidityProvider.info=Requirement: Burn at least 50 BSQ/DAO cycle for earning reputation
social.createUserProfile.administrator.info=Requirement: Bonded DAO role as channel administrator
social.createUserProfile.moderator.info=Requirement: Invitation from the channel owner and burn 100 BSQ/DAO cycle. \n\
  Entitled to make a compensation request for 500 BSQ/DAO cycle
social.createUserProfile.mediator.info=Requirement: Bonded DAO role as mediator

social.channelAdmin.headline=Channel administration
social.channelAdmin.addChannel=Add channel

social.channel.settings.admin=Channel admin
social.channel.settings.moderators=Channel moderators
social.channel.settings.members=Members

social.channel.notifications=Notifications
social.channel.notifications.all=All
social.channel.notifications.mention=When mentioned
social.channel.notifications.never=Never
social.notification.getMentioned={0} mentioned you\n{1}

social.sendPrivateMessage=Send private message
social.mention=Mention
social.ignore=Ignore
social.undoIgnore=Undo ignore
social.report=Report
social.reply.headline=Replying to:

social.userName=User name
validation.invalid=Invalid input
######################################################
## TradeIntent
######################################################
tradeIntent.create.title=Post what you want to trade
tradeIntent.create.userId=User name:
tradeIntent.create.ask=I want (ask):
tradeIntent.create.bid=I have (bid):
tradeIntent.table.title=Postings
######################################################
## Offerbook
######################################################
offerbook.showAllMarkets=Show all markets
createOffer.createOffer.button=Create offer
offerbook.headline=Browse available offers
offerbook.table.header.market=Market
offerbook.table.header.price=Price in {0} for 1 {1}
offerbook.table.header.baseAmount={0} (min-max)
offerbook.table.header.quoteAmount={0} (min-max)
offerbook.table.header.settlement=Settlement method(s)
offerbook.table.header.options=Options
offerbook.table.header.action=Actions
offerbook.table.header.maker=Maker
offerbook.table.action.takeOffer=Taker offer to {0}
offerbook.table.settlement.multi=Settlement method(s) for {0}:\n{1}\nSettlement method(s) for {2}:\n{3}
offerbook.createOffer.button=Create offer to {0}
######################################################
## CreateOffer
######################################################
createOffer.selectMarket=Select market
createOffer.selectOfferType=Select offer type
createOffer.setAmountAndPrice=Set amount and price
createOffer.selectProtocol=Select trade protocol
createOffer.selectSettlement=Select settlement method
createOffer.amount.description=Amount of {0} to {1}
createOffer.amount.prompt2=Enter {0} amount
createOffer.price.fix.prompt=Enter price
createOffer.price.float.prompt=Enter % value
createOffer.price.fix.description.buy=Buy at a fixed price per {0}
createOffer.price.fix.description.sell=Sell at a fixed price per {0}
createOffer.price.float.description=Floating price
createOffer.protocol.names=Protocols
######################################################
## TakeOffer
######################################################
takeOffer.offerType=Take offer to:
takeOffer.protocol=Using protocol: {0}
takeOffer.amountAndPrice=Amount and price
takeOffer.button=Take offer
## Enum from SwapProtocolType
BTC_XMR_SWAP=Atomic Cross Chain Swap
LIQUID_SWAP=Liquid Swap
#BSQ_SWAP=Bsq Swap  //covered by Bisq 1 string
LN_SWAP=Lightning network Swap
MULTISIG=Bisq MultiSig
BSQ_BOND=Bonded Reputation
REPUTATION=Reputation
sending=sending
receiving=receiving
createOffer.settlement.description=Select settlement method(s) for {0} {1}
createOffer.account.description=Select account(s) for {0} {1}
createOffer.account.table.accountName=Account name
createOffer.account.table.method=Settlement method
createOffer.account.table.select=Select
createOffer.account.placeholder.noAccounts=You have no accounts set up yet for the selected trade protocol.
createOffer.account.createNew=Create new account
createOffer.button=Create offer
publishOffer.button=Publish offer
takeOffer.settlement.description=Select settlement method for {0} {1}
takeOffer.account.description=Select account for {0} {1}
openOffers.headline=My open offers
openOffers.table.header.price=Price 
openOffers.table.header.baseAmount=Amount (min-max)
openOffers.table.header.quoteAmount=Volume (min-max)
pendingTrades.headline=Open trades
pendingTrades.table.header.price=Price 
pendingTrades.table.header.baseAmount=Amount (min-max)
pendingTrades.table.header.quoteAmount=Volume (min-max)
## Enum from FiatSettlementMethod
#SEPA=SEPA //covered by Bisq 1 string
ZELLE=Zelle
#REVOLUT=Revolut  //covered by Bisq 1 string
BANK=Bank transfer
## Enum from CryptoSettlementMethod
NATIVE_CHAIN=Native chain
## Enum from BitcoinSettlementMethod
MAINCHAIN=BTC (Mainnet)
LN=BTC over Lightning Network
LBTC=L-BTC (Pegged BTC on Liquid side chain)
RBTC=RBTC (Pegged BTC on RSK side chain)
WBTC=WBTC (wrapped BTC as ERC20 token)
OTHER=Other

######################################################
## Wallet
######################################################
# Balance Box
wallet.balance.box=Available Balance: {0}

# Wallet Configuration Dialog
wallet.config.title=Wallet Configuration
wallet.config.header=Connect to External Wallet
wallet.config.selectWalletPath=Select wallet path
wallet.config.walletsDataDirPath=Wallets data dir path
wallet.config.selectWallet=Select a Wallet:
wallet.config.enterHostname=Enter hostname of host running the wallet (e.g. 127.0.0.1):
wallet.config.enterPort=Enter the RPC port (default: 8332, regtest: 18443):
wallet.config.enterUsername=Enter RPC username:
wallet.config.enterPassword=Enter RPC password:
wallet.config.enterPassphrase=Enter wallet passphrase:
wallet.config.connect=Connect

# Wallet Tabs
wallet.tab.transactions=Transactions
wallet.tab.receive=Receive
wallet.tab.utxos=UTXOs

# Table Columns
wallet.column.txId=TxId
wallet.column.confirmations=Confirmations
wallet.column.reused=Reused

# Wallet Receive
wallet.receive.copy=Copy
wallet.receive.generateNewAddress=Generate new address
