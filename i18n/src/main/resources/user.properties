################################################################################
#
# User module
#
################################################################################
user.reputation.score.tooltip=Score: {0}\nRanking: {1}
user.userProfile.tooltip=Nickname: {0}\nBot ID: {1}\nProfile ID: {2}\n{3}
user.userProfile.tooltip.banned=This profile is banned!
user.userProfile.userName.banned=[Banned] {0}
user.userProfile.livenessState=Last user activity: {0} ago
user.userProfile.livenessState.ageDisplay={0} ago
user.userProfile.version=Version: {0}
# Dynamic values using TransportType.name()
# suppress inspection "UnusedProperty"
user.userProfile.addressByTransport.CLEAR=Clear net address: {0}
# suppress inspection "UnusedProperty"
user.userProfile.addressByTransport.TOR=Tor address: {0}
# suppress inspection "UnusedProperty"
user.userProfile.addressByTransport.I2P=I2P address: {0}


################################################################################
#
# Desktop module / User (options) section
#
################################################################################

user.userProfile=User profile
user.password=Password
user.paymentAccounts=Payment accounts
user.reputation=Reputation
user.roles=Roles
user.nodes=Nodes


################################################################################
# User profile
################################################################################

user.bondedRoles.userProfile.select=Select user profile
user.bondedRoles.userProfile.select.invalid=Please pick a user profile from the list
user.userProfile.comboBox.description=User profile
user.userProfile.nymId=Bot ID
user.userProfile.nymId.tooltip=\
  The 'Bot ID' is generated from the hash of the public key of that\n\
  user profiles identity.\n\
  It is appended to the nickname in case there are multiple user profiles in\n\
  the network with the same nickname to distinct clearly between those profiles.
user.userProfile.profileId=Profile ID
user.userProfile.profileId.tooltip=\
  The 'Profile ID' is the hash of the public key of that user profiles identity\n\
  encoded as hexadecimal string.
user.userProfile.profileAge=Profile age
user.userProfile.profileAge.tooltip=The 'Profile age' is the age in days of that user profile.
user.userProfile.livenessState.description=Last user activity
user.userProfile.livenessState.tooltip=The time passed since the user profile has been republished to the network triggered by user activity like mouse movements.
user.userProfile.reputation=Reputation
user.userProfile.statement=Statement
user.userProfile.statement.prompt=Enter optional statement
user.userProfile.statement.tooLong=Statement must not be longer than {0} characters
user.userProfile.terms=Trade terms
user.userProfile.terms.prompt=Enter optional trade terms
user.userProfile.terms.tooLong=Trade terms must not be longer than {0} characters

user.userProfile.createNewProfile=Create new profile
user.userProfile.learnMore=Why create a new profile?
user.userProfile.deleteProfile=Delete profile
user.userProfile.deleteProfile.popup.warning=Do you really want to delete {0}? You cannot un-do this operation.
user.userProfile.deleteProfile.popup.warning.yes=Yes, delete profile
user.userProfile.deleteProfile.cannotDelete=Deleting user profile is not permitted\n\n\
  To delete this profile, first:\n\
  - Delete all messages posted with this profile\n\
  - Close all private channels for this profile\n\
  - Make sure to have at least one more profile

user.userProfile.popup.noSelectedProfile=Please pick a user profile from the list
user.userProfile.save.popup.noChangesToBeSaved=There are no new changes to be saved


################################################################################
# Create user profile
################################################################################

user.userProfile.new.step2.headline=Complete your profile
user.userProfile.new.step2.subTitle=You can optionally add a personalized statement to your profile and set your trade terms.
user.userProfile.new.statement=Statement
user.userProfile.new.statement.prompt=Optional add statement
user.userProfile.new.terms=Your trade terms
user.userProfile.new.terms.prompt=Optional set trade terms


################################################################################
# Password
################################################################################

user.password.headline.setPassword=Set password protection
user.password.headline.removePassword=Remove password protection
user.password.button.savePassword=Save password
user.password.button.removePassword=Remove password
user.password.enterPassword=Enter password (min. 8 characters)
user.password.confirmPassword=Confirm password
user.password.savePassword.success=Password protection enabled.
user.password.removePassword.success=Password protection removed.
user.password.removePassword.failed=Invalid password.


################################################################################
# Payment accounts
################################################################################

user.paymentAccounts.headline=Your payment accounts
user.paymentAccounts.noAccounts.headline=Your payment accounts
user.paymentAccounts.noAccounts.info=You haven't set up any accounts yet.
user.paymentAccounts.noAccounts.whySetup=Why is setting up an account useful?
user.paymentAccounts.noAccounts.whySetup.info=When you're selling Bitcoin, you need to provide your payment account \
  details to the buyer for receiving the fiat payment. Setting up accounts in advance allows for quick and \
  convenient access to this information during the trade.
user.paymentAccounts.noAccounts.whySetup.note=Background information:\n\
  Your account data is exclusively stored locally on your \
  computer and is shared with your trade partner only when you decide to share it.
user.paymentAccounts.accountData=Payment account info
user.paymentAccounts.selectAccount=Select payment account
user.paymentAccounts.createAccount=Create new payment account
user.paymentAccounts.deleteAccount=Delete payment account
user.paymentAccounts.createAccount.headline=Add new payment account
user.paymentAccounts.createAccount.subtitle=The payment account is stored only locally on your computer and \
  only sent to your trade peer if you decide to do so.
user.paymentAccounts.createAccount.accountName=Payment account name
user.paymentAccounts.createAccount.accountName.prompt=Set a unique name for your payment account
user.paymentAccounts.createAccount.accountData.prompt=Enter the payment account info (e.g. bank account data) you \
  want to share with a potential Bitcoin buyer so that they can transfer you the national currency amount.
user.paymentAccounts.createAccount.sameName=This account name is already used. Please use a different name.


################################################################################
# Reputation
################################################################################

user.reputation.headline=How to build up reputation
user.reputation.info=For Bitcoin sellers it's important to provide reputation to the buyer, because the buyer will send \
  the fiat amount first and need a reason why they should trust the seller. \
  The default value for the min. required reputation score is 30 000 (can be changed in 'Settings/Preferences').\n\
  Gaining reputation is intended for experienced Bisq users who are familiar with Bisq.\n\n\
  There are multiple options how to provide reputation:\n\n\
  1. Burning BSQ\n\
  2. Setting up a BSQ bond\n\
  3. Importing the signed account age witness from a Bisq 1 account\n\
  4. Importing the account age from a Bisq 1 account

# suppress inspection "UnusedProperty"
user.reputation.source.BURNED_BSQ=Burned BSQ
# suppress inspection "UnusedProperty"
user.reputation.source.BSQ_BOND=Bonded BSQ
# suppress inspection "UnusedProperty"
user.reputation.source.PROFILE_AGE=Profile age
# suppress inspection "UnusedProperty"
user.reputation.source.BISQ1_ACCOUNT_AGE=Account age
# suppress inspection "UnusedProperty"
user.reputation.source.BISQ1_SIGNED_ACCOUNT_AGE_WITNESS=Signed witness

user.reputation.pubKeyHash=Profile ID
user.reputation.weight=Weight
user.reputation.score=Score
user.reputation.totalScore=Total score
user.reputation.ranking=Ranking
user.reputation.score.formulaHeadline=The reputation score is calculated as follows:

user.reputation.burnBsq=Burning BSQ
user.reputation.burnedBsq.tab1=Why
user.reputation.burnedBsq.tab2=Score
user.reputation.burnedBsq.tab3=How-to
user.reputation.burnedBsq.infoHeadline=Skin in the game
user.reputation.burnedBsq.info=By burning BSQ you provide evidence that you invested money into your reputation.\n\
  The burn BSQ transaction contains the hash of the public key of your profile. \
  In case of malicious behaviour your profile might get banned by mediators and with that your investment into your reputation would become worthless.
user.reputation.burnedBsq.infoHeadline2=What is the recommended amount to burn?
user.reputation.burnedBsq.info2=That will be determined by the competition of sellers. \
  The sellers with the highest reputation score will have better trade opportunities and can get a higher price premium. \
  The best offers ranked by reputation will get promoted in the offer selection at the 'Trade wizard'.\n\n\
  Buyers can only take offers from sellers with a reputation score of at least 30 000. This is the default value and can be \
  changed in the preferences.\n\n\
  If burning BSQ is undesirable, consider the other available options for building up reputation.
user.reputation.burnedBsq.score.headline=Impact on reputation score
user.reputation.burnedBsq.score.info=Burning BSQ is considered the strongest form of reputation which is represented by the high weight factor.

# Dynamically generated in BurnBsqTab2View
# suppress inspection "UnusedProperty"
user.reputation.burnedBsq.totalScore=Burned BSQ amount * weight

user.reputation.sim.headline=Simulation tool:
user.reputation.sim.burnAmount=BSQ amount
# Dynamically generated in BondScoreSimulation
# suppress inspection "UnusedProperty"
user.reputation.sim.burnAmount.prompt=Enter the BSQ amount
# suppress inspection "UnusedProperty"
user.reputation.sim.lockTime=Lock time in blocks
# Dynamically generated in BondScoreSimulation
# suppress inspection "UnusedProperty"
user.reputation.sim.lockTime.prompt=Enter lock time
user.reputation.sim.age=Age in days
# Dynamically generated in BondScoreSimulation
# suppress inspection "UnusedProperty"
user.reputation.sim.age.prompt=Enter the age in days
user.reputation.sim.score=Total score

user.reputation.burnedBsq.howToHeadline=Process for burning BSQ
user.reputation.burnedBsq.howTo=1. Select the user profile for which you want to attach the reputation.\n\
  2. Copy the 'profile ID'\n\
  3. Open Bisq 1 and go to 'DAO/PROOF OF BURN' and paste the copied value into the 'pre-image' field.\n\
  4. Enter the amount of BSQ you want to burn.\n\
  5. Publish the Burn BSQ transaction.\n\
  6. After blockchain confirmation your reputation will become visible in your profile.

user.reputation.bond=BSQ bonds
user.reputation.bond.tab1=Why
user.reputation.bond.tab2=Score
user.reputation.bond.tab3=How-to
user.reputation.bond.infoHeadline=Skin in the game
user.reputation.bond.info=By setting up a BSQ bond you provide evidence that you locked up money for gaining reputation.\n\
  The BSQ bond transaction contains the hash of the public key of your profile. \
  In case of malicious behaviour your bond could get confiscated by the DAO and your profile might get banned by mediators.
user.reputation.bond.infoHeadline2=What is the recommended amount and lock time?
user.reputation.bond.info2=The lock time need to be at least 50 000 blocks which is about 1 year to be considered a valid bond. \
  The amount can be chosen by the user and will determine the ranking to other sellers. \
  The sellers with the highest reputation score will have better trade opportunities and can get a higher price premium. \
  The best offers ranked by reputation will get promoted in the offer selection at the 'Trade wizard'.\n\n\
  Buyers can only take offers from sellers with a reputation score of at least 30 000. This is the default value and can be \
  changed in the preferences.\n\n\
  If a BSQ bond is too much of a hassle, consider the other available options for building up reputation.
user.reputation.bond.score.headline=Impact on reputation score
user.reputation.bond.score.info=Setting up a BSQ bond is considered a strong form of reputation which is represented by the weight factor.\n\
  Lock time must be at least: 50 000 blocks (about 1 year).
# Dynamically generated in BondedReputationTab2View
# suppress inspection "UnusedProperty"
user.reputation.bond.totalScore=BSQ amount * weight

user.reputation.bond.howToHeadline=Process for setting up a BSQ bond
user.reputation.bond.howTo=1. Select the user profile for which you want to attach the reputation.\n\
  2. Copy the 'profile ID'\n\
  3. Open Bisq 1 and go to 'DAO/BONDING/BONDED REPUTATION' and paste the copied value into the 'salt' field.\n\
  4. Enter the amount of BSQ you want to lock up and the lock time (50 000 blocks).\n\
  5. Publish the lockup transaction.\n\
  6. After blockchain confirmation your reputation will become visible in your profile.

user.reputation.accountAge=Account age
user.reputation.accountAge.tab1=Why
user.reputation.accountAge.tab2=Score
user.reputation.accountAge.tab3=Import
user.reputation.accountAge.infoHeadline=Provide trust
user.reputation.accountAge.info=By linking your Bisq 1 'account age' you can provide some level of trust.\n\n\
  There are some reasonable expectations that a user who has used Bisq for some time is an honest user. But \
  that expectation is weak compared to other forms of reputation where the user provides stronger proof with \
  the use of some financial resources.
user.reputation.accountAge.infoHeadline2=Privacy implications
user.reputation.accountAge.info2=Linking your Bisq 1 account with Bisq 2 has some implications on your privacy. \
  For verifying your 'account age' your Bisq 1 identity gets cryptographically linked to your Bisq 2 profile ID.\n\
  Though, the exposure is limited to the 'Bisq 1 bridge node' which is operated by a Bisq contributor who has set up a \
  BSQ bond (bonded role).\n\n\
  Account age is an alternative for those who do not want to use burned BSQ or BSQ bonds due to the financial \
  cost. The 'account age' should be at least several months old to reflect some level of trust.
user.reputation.accountAge.score.headline=Impact on reputation score
user.reputation.accountAge.score.info=Importing 'account age' is considered a rather weak form of reputation which is \
  represented by the low weight factor.\n\
  There is a cap of 2000 days for the score calculation.
# Dynamically generated in AccountAgeTab2View
# suppress inspection "UnusedProperty"
user.reputation.accountAge.totalScore=Account age in days (max. 2000) * weight

user.reputation.accountAge.import.step1.title=Step 1
user.reputation.accountAge.import.step1.instruction=Select the user profile for which you want to attach the reputation.
user.reputation.accountAge.import.step2.title=Step 2
user.reputation.accountAge.import.step2.instruction=Copy the profile ID to paste on Bisq 1.
user.reputation.accountAge.import.step2.profileId=Profile ID (Paste on the account screen on Bisq 1)
user.reputation.accountAge.import.step3.title=Step 3
user.reputation.accountAge.import.step3.instruction1=3.1. - Open Bisq 1 and go to 'ACCOUNT/NATIONAL CURRENCY ACCOUNTS'.
user.reputation.accountAge.import.step3.instruction2=3.2. - Select the oldest account and click 'EXPORT ACCOUNT AGE FOR BISQ 2'.
user.reputation.accountAge.import.step3.instruction3=3.3. - This will create json data with a signature of your Bisq 2 Profile ID and copy it to the clipboard.
user.reputation.accountAge.import.step4.title=Step 4
user.reputation.accountAge.import.step4.instruction=Paste the json data from the previous step
user.reputation.accountAge.import.step4.signedMessage=Json data from Bisq 1

user.reputation.signedWitness=Signed account age witness
user.reputation.signedWitness.tab1=Why
user.reputation.signedWitness.tab2=Score
user.reputation.signedWitness.tab3=How-to
user.reputation.signedWitness.infoHeadline=Provide trust
user.reputation.signedWitness.info=By linking your Bisq 1 'signed account age witness' you can provide some level of trust.\n\n\
  There are some reasonable expectations that a user who has traded a while back on Bisq 1 and got signed their account is an honest user. But \
  that expectation is weak compared to other forms of reputation where the user provides more "skin in the game" with \
  the use of financial resources.
user.reputation.signedWitness.infoHeadline2=Privacy implications
user.reputation.signedWitness.info2=Linking your Bisq 1 account with Bisq 2 has some implications on your privacy. \
  For verifying your 'signed account age witness' your Bisq 1 identity gets cryptographically linked to your Bisq 2 profile ID.\n\
  Though, the exposure is limited to the 'Bisq 1 bridge node' which is operated by a Bisq contributor who has set up a \
  BSQ bond (bonded role).\n\n\
  Signed account age witness is an alternative for those who don't want to use burned BSQ or BSQ bonds due to the financial \
  burden. The 'signed account age witness' has to be at least 61 days old to be considered for reputation.
user.reputation.signedWitness.score.headline=Impact on reputation score
user.reputation.signedWitness.score.info=Importing 'signed account age witness' is considered a weak form of reputation which is \
  represented by the weight factor. The 'signed account age witness' has to be at least 61 days old and there is a cap \
  of 2000 days for the score calculation.
# Dynamically generated in SignedWitnessTab2View
# suppress inspection "UnusedProperty"
user.reputation.signedWitness.totalScore=Witness-age in days (min. 61, max. 2000) * weight
user.reputation.signedWitness.import.step1.title=Step 1
user.reputation.signedWitness.import.step1.instruction=Select the user profile for which you want to attach the reputation.
user.reputation.signedWitness.import.step2.title=Step 2
user.reputation.signedWitness.import.step2.instruction=Copy the profile ID to paste on Bisq 1.
user.reputation.signedWitness.import.step2.profileId=Profile ID (Paste on the account screen on Bisq 1)
user.reputation.signedWitness.import.step3.title=Step 3
user.reputation.signedWitness.import.step3.instruction1=3.1. - Open Bisq 1 and go to 'ACCOUNT/NATIONAL CURRENCY ACCOUNTS'.
user.reputation.signedWitness.import.step3.instruction2=3.2. - Select the oldest account and click 'EXPORT SIGNED WITNESS FOR BISQ 2'.
user.reputation.signedWitness.import.step3.instruction3=3.3. - This will create json data with a signature of your Bisq 2 Profile ID and copy it to the clipboard.
user.reputation.signedWitness.import.step4.title=Step 4
user.reputation.signedWitness.import.step4.instruction=Paste the json data from the previous step
user.reputation.signedWitness.import.step4.signedMessage=Json data from Bisq 1

user.reputation.request=Request authorization
user.reputation.request.success=Successfully requested authorization from Bisq 1 bridge node\n\n\
  Your reputation data should now be available in the network.
user.reputation.request.error=Requesting authorization failed. Text from clipboard:\n\{0}

user.reputation.table.headline=Reputation ranking
user.reputation.table.columns.userProfile=User profile
user.reputation.table.columns.profileAge=Profile age
user.reputation.table.columns.livenessState=Last user activity
user.reputation.table.columns.reputationScore=Reputation score
user.reputation.table.columns.reputation=Reputation
user.reputation.table.columns.details=Details
user.reputation.table.columns.details.popup.headline=Reputation details
user.reputation.table.columns.details.button=Show details

user.reputation.details.table.columns.source=Type
user.reputation.details.table.columns.lockTime=Lock time
user.reputation.details.table.columns.score=Score


################################################################################
# Bonded roles
################################################################################

user.bondedRoles.headline.roles=Bonded roles
user.bondedRoles.headline.nodes=Network nodes


################################################################################
# Bonded Role Types
################################################################################

user.bondedRoles.type.MEDIATOR=Mediator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.ARBITRATOR=Arbitrator
user.bondedRoles.type.MODERATOR=Moderator
user.bondedRoles.type.SECURITY_MANAGER=Security manager
user.bondedRoles.type.RELEASE_MANAGER=Release manager

user.bondedRoles.type.ORACLE_NODE=Oracle node
user.bondedRoles.type.SEED_NODE=Seed node
user.bondedRoles.type.EXPLORER_NODE=Explorer node
user.bondedRoles.type.MARKET_PRICE_NODE=Market price node


################################################################################
# Bonded roles about
################################################################################

# suppress inspection "UnusedProperty"
user.bondedRoles.type.MEDIATOR.about.inline=mediator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.ARBITRATOR.about.inline=arbitrator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.MODERATOR.about.inline=moderator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.SECURITY_MANAGER.about.inline=security manager
# suppress inspection "UnusedProperty"
user.bondedRoles.type.RELEASE_MANAGER.about.inline=release manager

# suppress inspection "UnusedProperty"
user.bondedRoles.type.ORACLE_NODE.about.inline=oracle node operator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.SEED_NODE.about.inline=seed node operator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.EXPLORER_NODE.about.inline=explorer node operator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.MARKET_PRICE_NODE.about.inline=market price node operator

user.bondedRoles.registration.hideInfo=Hide instructions
user.bondedRoles.registration.showInfo=Show instructions

user.bondedRoles.registration.about.headline=About the {0} role

# suppress inspection "UnusedProperty"
user.bondedRoles.type.MEDIATOR.about.info=If there are conflicts in a Bisq Easy trade the traders can request help from a mediator.\n\
  The mediator has no enforcement power and can only try to assist in finding a cooperative resolution. In case of clear violations \
  of the trade rules or scam attempts the mediator can provide information to the moderator to ban the bad actor from the network.\n\
  Mediators and arbitrators from Bisq 1 can become Bisq 2 mediators without locking up a new BSQ bond.
# suppress inspection "UnusedProperty"
user.bondedRoles.type.MODERATOR.about.info=Chat users can report violations of the chat or trade rules to the moderator.\n\
  In case the provided information is sufficient to verify a rule violation the moderator can ban that user from the network.\n\
  In case of severe violations of a seller who had earned some sort of reputation, the reputation becomes invalidated and the relevant source data \
  (like the DAO transaction or account age data) will be blacklisted in Bisq 2 and reported back to Bisq 1 by the oracle \
  operator and the user will get banned at Bisq 1 as well.
# suppress inspection "UnusedProperty"
user.bondedRoles.type.SECURITY_MANAGER.about.info=A security manager can send an alert message in case of emergency situations.
# suppress inspection "UnusedProperty"
user.bondedRoles.type.RELEASE_MANAGER.about.info=A release manager can send notifications when a new release is available.

# suppress inspection "UnusedProperty"
user.bondedRoles.type.SEED_NODE.about.info=A seed node provides network addresses of network participants for bootstrapping to the Bisq 2 P2P network.\n\
  This is essential at the very fist start as at that moment the new user has no persisted data yet for connecting to other peers.\n\
  It also provides P2P network data like chat messages to the freshly connecting user. \
  That data delivery service is also performed by any other network node, though as seed nodes have 24/7 availability and a high level of quality of \
  service they provide more stability and better performance, thus leading to a better bootstrap experience.\n\
  Seed node operators from Bisq 1 can become Bisq 2 seed node operators without locking up a new BSQ bond.
# suppress inspection "UnusedProperty"
user.bondedRoles.type.ORACLE_NODE.about.info=The oracle node is used to provide Bisq 1 and DAO data for Bisq 2 use cases like reputation.
# suppress inspection "UnusedProperty"
user.bondedRoles.type.EXPLORER_NODE.about.info=The blockchain explorer node is used in Bisq Easy for transaction lookup of the Bitcoin transaction.
# suppress inspection "UnusedProperty"
user.bondedRoles.type.MARKET_PRICE_NODE.about.info=The market price node provides market data from the Bisq market price aggregator.


################################################################################
# Bonded roles how
################################################################################

# suppress inspection "UnusedProperty"
user.bondedRoles.type.MEDIATOR.how.inline=a mediator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.ARBITRATOR.how.inline=a arbitrator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.MODERATOR.how.inline=a moderator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.SECURITY_MANAGER.how.inline=a security manager
# suppress inspection "UnusedProperty"
user.bondedRoles.type.RELEASE_MANAGER.how.inline=a release manager

# suppress inspection "UnusedProperty"
user.bondedRoles.type.SEED_NODE.how.inline=a seed node operator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.ORACLE_NODE.how.inline=an oracle node operator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.EXPLORER_NODE.how.inline=an explorer node operator
# suppress inspection "UnusedProperty"
user.bondedRoles.type.MARKET_PRICE_NODE.how.inline=a market price node operator

user.bondedRoles.registration.how.headline=How to become {0}?

user.bondedRoles.registration.how.info=\
  1. Select the user profile you want to use for registration and create a backup of your data directory.\n\
  3. Make a proposal at 'https://github.com/bisq-network/proposals' to become {0} and add your profile ID to the proposal.\n\
  4. After your proposal got reviewed and got support from the community, make a DAO proposal for a bonded role.\n\
  5. After your DAO proposal got accepted in DAO voting lock up the required BSQ bond.\n\
  6. After your bond transaction is confirmed go to 'DAO/Bonding/Bonded roles' in Bisq 1 and click on the sign button to open the signing popup window.\n\
  7. Copy the profile ID and paste it into the message field. Click sign and copy the signature. Paste the signature to the Bisq 2 signature field.\n\
  8. Enter the bondholder username.\n\
  {1}

user.bondedRoles.registration.how.info.role=\
  9. Click the 'Request registration' button. If all was correct your registration becomes visible in the Registered bonded roles table.

user.bondedRoles.registration.how.info.node=\
  9. Copy the 'default_node_address.json' file from the data directory of the node you want to register to your hard drive and open it with the 'Import node address' button.\n\
  10. Click the 'Request registration' button. If all was correct your registration becomes visible in the Registered network nodes table.


################################################################################
# Bonded roles registration
################################################################################

user.bondedRoles.registration.headline=Request registration

user.bondedRoles.registration.profileId=Profile ID
user.bondedRoles.registration.bondHolderName=Username of bond holder
user.bondedRoles.registration.bondHolderName.prompt=Enter the username of the Bisq 1 bond holder
user.bondedRoles.registration.signature=Signature
user.bondedRoles.registration.signature.prompt=Paste the signature from you bonded role
user.bondedRoles.registration.requestRegistration=Request registration
user.bondedRoles.registration.success=Registration request was successfully sent. You will see in the table below if the registration was successfully verified and published by the oracle node.
user.bondedRoles.registration.failed=Sending the registration request failed.\n\n\{0}
user.bondedRoles.registration.node.addressInfo=Node address data
user.bondedRoles.registration.node.addressInfo.prompt=Import the 'default_node_address.json' file from the node data directory.
user.bondedRoles.registration.node.importAddress=Import node address
user.bondedRoles.registration.node.pubKey=Public key
user.bondedRoles.registration.node.privKey=Private key
user.bondedRoles.registration.node.showKeyPair=Show key pair

################################################################################
# Bonded roles cancellation
################################################################################

user.bondedRoles.cancellation.requestCancellation=Request cancellation
user.bondedRoles.cancellation.success=Cancellation request was successfully sent. You will see in the table below if the cancellation request was successfully verified and the role removed by the oracle node.
user.bondedRoles.cancellation.failed=Sending the cancellation request failed.\n\n\{0}


################################################################################
# Registered bonded roles table
################################################################################

user.bondedRoles.table.headline.nodes=Registered network nodes
user.bondedRoles.table.headline.roles=Registered bonded roles

user.bondedRoles.table.columns.isBanned=Is banned
user.bondedRoles.table.columns.userProfile=User profile
user.bondedRoles.table.columns.userProfile.defaultNode=Node operator with statically provided key
user.bondedRoles.table.columns.profileId=Profile ID
user.bondedRoles.table.columns.signature=Signature
# Commented out in code ATM in RolesView
# suppress inspection "UnusedProperty"
user.bondedRoles.table.columns.oracleNode=Oracle node
user.bondedRoles.table.columns.bondUserName=Bond username

user.bondedRoles.table.columns.role=Role

user.bondedRoles.table.columns.node=Node
user.bondedRoles.table.columns.node.address=Address
user.bondedRoles.table.columns.node.address.openPopup=Open address data popup
user.bondedRoles.table.columns.node.address.popup.headline=Node address data


################################################################################
# Bonded roles verification
################################################################################

user.bondedRoles.verification.howTo.roles=How to verify a bonded role?
user.bondedRoles.verification.howTo.nodes=How to verify a network node?
user.bondedRoles.verification.howTo.instruction=\
  1. Open Bisq 1 and go to 'DAO/Bonding/Bonded roles' and select the role by the bond-username and the role type.\n\
  2. Click on the verify button, copy the profile ID and paste it into the message field.\n\
  3. Copy the signature and paste it into the signature field in Bisq 1.\n\
  4. Click the verify button. If the signature check succeeds, the bonded role is valid.




